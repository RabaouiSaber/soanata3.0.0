imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: fr
    sonata.user.admin.user.class: Application\Sonata\UserBundle\Admin\UserAdmin

framework:
    #esi: ~
    translator: { fallbacks: ['%locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.root_dir%/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale: '%locale%'
    trusted_hosts: ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id: ~
    fragments: ~
    http_method_override: true

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'
    form_themes:
        - 'SonataCoreBundle:Form:datepicker.html.twig'

# Doctrine Configuration
doctrine:
    dbal:
        driver: pdo_mysql
        host: '%database_host%'
        port: '%database_port%'
        dbname: '%database_name%'
        user: '%database_user%'
        password: '%database_password%'
        charset: UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: '%kernel.root_dir%/data/data.db3'
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path: '%database_path%'

    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    spool: { type: memory }


sonata_block:
    default_contexts: [cms]
    blocks:
        # enable the SonataAdminBundle block
        sonata.user.block.menu: # used to display the menu in profile pages
        #sonata.user.block.account:
        sonata.block.service.text: # used to if you plan to use Sonata user routes
        sonata.block.service.rss: ~
        sonata.admin.block.search_result:
#        sonata.admin.block.stats:
        sonata.admin.block.admin_list:
            contexts: [admin]   
        #sonata.user.block.account: # used to display menu option (login option) 
            
sonata_admin:
    
    title:      MyProjetTest
    title_logo: img/logo.jpg
    templates:
        layout:       AppBundle::standard_layout.html.twig
        user_block: AppBundle:Admin:admin_topnav.html.twig
    #assets:
        #javascripts: # changed order of js assets loading
            #- '/projetsonata/web/bundles/sonatacore/vendor/moment/min/moment-with-locales.min.js'
            #- '/projetsonata/web/bundles/sonatacore/vendor/eonasdan-bootstrap-datetimepicker/build/js/bootstrap-datetimepicker.min.js'
            #- '/projetsonata/web/bundles/sonatacore/vendor/eonasdan-bootstrap-datetimepicker/build/css/bootstrap-datetimepicker.min.css'
    security:
        handler: sonata.admin.security.handler.role
        
    dashboard:
        blocks:

            # display two dashboard blocks
#            -
#                position: left
#                type: sonata.admin.block.admin_list
            -
                position: top
                class: col-md-12
                type: sonata.block.service.rss
                settings:
                    title: My First Block (Flux RSS)
                    url: https://sonata-project.org/blog/archive.rss
#                settings:
#                    groups: [Groupe1]
#            -
#                position: right
#                type: sonata.admin.block.admin_list
#                settings:
#                    groups: [Groupe2]
#            - 
#                position: left
#                type: sonata.admin.block.admin_list
#                settings:
#                    groups: [Demo]


#        groups:
#            Groupe1:
#                items:
#                    - admin.blog_post
#
#            Groupe2:
#                items:
#                    - admin.category
#            Demo:
#                items:
#                    - app.admin.car
##                    - bundle.admin.product_statistics
#                    #- admin.block.service.stats
                    
knp_snappy:
    pdf:
        enabled:    true
        binary:     "\"C:\\Program Files\\wkhtmltopdf\\bin\\wkhtmltopdf.exe\"" 
        options:    []
        
        
sonata_user:
    security_acl: false
    manager_type: orm # can be orm or mongodb
    admin:                  # Admin Classes
        user:
            class:          Sonata\UserBundle\Admin\Entity\UserAdmin
            controller:     SonataAdminBundle:CRUD
            translation:    SonataUserBundle

        group:
            class:          Sonata\UserBundle\Admin\Entity\GroupAdmin
            controller:     SonataAdminBundle:CRUD
            translation:    SonataUserBundle
    
fos_user:
    db_driver:      orm # can be orm or odm
    firewall_name:  main
    user_class:     Application\Sonata\UserBundle\Entity\User


    group:
        group_class:   Application\Sonata\UserBundle\Entity\Group
        group_manager: sonata.user.orm.group_manager                    # If you're using doctrine orm (use sonata.user.mongodb.group_manager for mongodb)

    service:
        user_manager: sonata.user.orm.user_manager                      # If you're using doctrine orm (use sonata.user.mongodb.user_manager for mongodb)


doctrine:

    dbal:
        types:
            json: Sonata\Doctrine\Types\JsonType
    
    orm:
        entity_managers:
            default:
                mappings:
                    ApplicationSonataUserBundle: ~
                    SonataUserBundle: ~
                    FOSUserBundle: ~                   # If SonataUserBundle extends it
                    ApplicationSonataMediaBundle: ~
                    SonataMediaBundle: ~
                    gedmo_translatable:
                        type: annotation
                        prefix: Gedmo\Translatable\Entity
                        dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Translatable/Entity"
                        alias: GedmoTranslatable # (optional) it will default to the name set for the mapping
                        is_bundle: false
                    gedmo_translator:
                        type: annotation
                        prefix: Gedmo\Translator\Entity
                        dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Translator/Entity"
                        alias: GedmoTranslator # (optional) it will default to the name set for the mapping
                        is_bundle: false
                    
                    
sonata_media:
    # if you don't use default namespace configuration
    #class:
    #    media: MyVendor\MediaBundle\Entity\Media
    #    gallery: MyVendor\MediaBundle\Entity\Gallery
    #    gallery_has_media: MyVendor\MediaBundle\Entity\GalleryHasMedia
    db_driver: doctrine_orm # or doctrine_mongodb, doctrine_phpcr it is mandatory to choose one here
    default_context: default # you need to set a context
    contexts:
        default:  # the default context is mandatory
            providers:
                - sonata.media.provider.dailymotion
                - sonata.media.provider.youtube
                - sonata.media.provider.image
                - sonata.media.provider.file
                - sonata.media.provider.vimeo

            formats:
                small: { width: 100 , quality: 70}
                big:   { width: 500 , quality: 70}
        news:
            providers:
                - sonata.media.provider.youtube
                - sonata.media.provider.image

            formats:
                small: { width: 150 , quality: 95}
                big:   { width: 500 , quality: 90}

    cdn:
        server:
            path: /uploads/media # http://media.sonata-project.org/

    filesystem:
        local:
            directory:  "%kernel.root_dir%/../web/uploads/media"
            create:     false
            


sonata_translation:
    locales: [fr, en, it, nl, es]
    default_locale: '%locale%'
    # here enable the types you need
    gedmo:
        enabled: true
#    knplabs:
#        enabled: true
    #phpcr:
    #    enabled: true

    
stof_doctrine_extensions:
    default_locale: %locale%
    orm:
        default: 
            translatable: true
            
            
            
lunetics_locale:
    guessing_order:
        - router
        - browser
    allowed_locales:
        - en
        - fr
        - de    
   
   
        
